# load dataset
library(datasets)
data("iris")
head(iris, 5)
# remove response column
iris_unlabelled <- iris[,1:4]
head(iris_unlabelled,5)
# set up variables
WCSS_vector = vector("numeric")
k_vector <- 1:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
# train kmeans model
model <- kmeans(iris_unlabelled,
centers = k,
nstart = 25)
# store wss for each model
WCSS_vector[k] <- model$tot.withinss
}
# plot elbow curve
plot(WCSS_vector, type='b')
# import package
library(cluster)
# set up variables
ss_vector <- vector("numeric")
k_vector <- 1:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
model <- kmeans(iris_unlabelled, centers=3, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
ss_mean
model <- kmeans(iris_unlabelled, centers=3, nstart=25)
clusplot(iris_unlabelled, model$cluster, color=T, lines=F)
table(model$cluster, iris$Species)
clusplot(iris_unlabelled, model$cluster, color=T, shade=T, lines=F)
# import package
library(outliers)
crime <- read.delim("week-2-data-summer/uscrime.txt", header=T)
# load data
crime <- read.delim("week-2-data-summer/uscrime.txt")
# load data
crime <- read.delim("week 2 data-summer/uscrime.txt")
# load data
crime <- read.delim("./week 2 data-summer/uscrime.txt")
# load data
crime <- read.delim("../week 2 data-summer/uscrime.txt")
head(crime)
# isolate last column
crime[,16]
crime[,-1]
crime[:,-1]
crime[, 16]
shapiro.test(crime$Crime)
nrow(crime)
# check number of data points in dataset
nrow(crime)
shapiro.test(crime$Crime)
# identify one outlier
grubbs.test(crime[,16], type=10)
# import package
library(outliers)
# load data
crime <- read.delim("../week 2 data-summer/uscrime.txt")
head(crime)
crime[, 16]
# check number of data points in dataset
nrow(crime)
# identify one outlier
grubbs.test(crime[,16], type=10)
plot(crime$Crime)
# identify one outlier on opposite tails
grubbs.test(crime[,16], type=11)
shapiro.test(crime$Crime)
plot(crime$Crime)
# load dataset
library(datasets)
data("iris")
head(iris, 5)
# remove response column
iris_unlabelled <- iris[,1:4]
head(iris_unlabelled,5)
# set up variables
WCSS_vector = vector("numeric")
k_vector <- 1:10
set.seed(42)
# loop over values of k
for (k in seq_along(k_vector)) {
# train kmeans model
model <- kmeans(iris_unlabelled,
centers = k,
nstart = 25)
# store wss for each model
WCSS_vector[k] <- model$tot.withinss
}
# plot elbow curve
plot(WCSS_vector, type='b')
# import package
library(cluster)
# set up variables
ss_vector <- vector("numeric")
k_vector <- 1:10
set.seed(42)
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss[3]
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
ss[3]
ss
ss_mean <- mean(ss[,3])
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# import package
library(cluster)
# set up variables
ss_vector <- vector("numeric")
k_vector <- 1:10
set.seed(42)
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
ss[, 3]
ss[,3]
ss
ss
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
ss
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
k_vector <- 1:10
set.seed(42)
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
k <- 1:10
k
k <- 2:10
k
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
#print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
k_vector <- 3:10
set.seed(42)
# loop over values of k
for (k in seq_along(k_vector)) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
#print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
#print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
k_vector <- 1:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
print(ss)
#ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
print(k)
#print(ss)
ss_mean <- mean(ss[,3])
#ss_vector <- c(ss_vector, ss_mean)
}
# import package
library(cluster)
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
ss_vector <- c(ss_vector, ss_mean)
}
plot(sil_vector)
plot(ss_vector)
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
ss_vector[k] <- ss_mean
}
plot(ss_vector)
ss_vector
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled))
ss_mean <- mean(ss[,3])
print(ss_mean)
ss_vector[k] <- ss_mean
}
summary(ss)
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dist(iris_unlabelled)^2)
ss_mean <- mean(ss[,3])
print(ss_mean)
ss_vector[k] <- ss_mean
}
model <- kmeans(iris_unlabelled, centers=2, nstart=25)
clusplot(iris_unlabelled, model$cluster, color=T, shade=T, lines=F)
# import package
library(cluster)
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
dis <- dist(iris_unlabelled)^2 # ^2 because kmeans uses sqaured euclidean distance
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dis)
#ss_mean <- mean(ss[,3])
plot(ss)
}
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dis)
ss_mean <- mean(ss[,3])
ss_vector <- c(ss, ss_vector)
plot(ss)
}
plot(ss_vector, type='b')
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
dis <- dist(iris_unlabelled)^2 # ^2 because kmeans uses sqaured euclidean distance
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dis)
ss_mean <- mean(ss[,3])
ss_vector[k] <- ss_mean
plot(ss)
}
plot(k, ss_vector)
plot(ss_vector)
plot(ss_vector, type='b')
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dis)
ss_mean <- mean(ss[,3])
ss_vector[k] <- ss_mean
plot(ss, col=meta$Colors)
}
install.packages("factoextra")
library(factoextra)
fviz_silhouette(ss)
# set up variables
ss_vector <- vector("numeric")
k_vector <- 2:10
dis <- dist(iris_unlabelled)^2 # ^2 because kmeans uses sqaured euclidean distance
set.seed(42)
# loop over values of k
for (k in k_vector) {
model <- kmeans(iris_unlabelled, centers=k, nstart=25)
ss <- silhouette(model$cluster, dis)
ss_mean <- mean(ss[,3])
ss_vector[k] <- ss_mean
fviz_silhouette(ss)
}
model <- kmeans(iris_unlabelled, centers=2, nstart=25)
# define distance
# ^2 because kmeans uses sqaured euclidean distance
dis <- dist(iris_unlabelled)^2
set.seed(42)
model <- kmeans(iris_unlabelled, centers=2, nstart=25)
fviz_silhouette(ss)
# silhouette plot when k = 2
set.seed(42)
model <- kmeans(iris_unlabelled, centers=2, nstart=25)
ss <- silhouette(model$cluster, dis)
fviz_silhouette(ss)
# silhouette plot when k = 3
set.seed(42)
model <- kmeans(iris_unlabelled, centers=3, nstart=25)
ss <- silhouette(model$cluster, dis)
fviz_silhouette(ss)
temps <- read.delim("../week 2 data-summer/temps.txt")
head(temps,5)
hist(crime$Crime, xlab="Crimes Committed",col="yellow",,main="Fig1a: Histogram of Crimes Data",probability=TRUE)
s = sd(crime$Crime)
m = mean(crime$Crime)
curve(dnorm(x, mean=m, sd=s), add=TRUE,col = "blue", lwd = 3)
grid()
hist(crime$Crime, xlab="Crimes Committed",col="yellow",,main="Fig1a: Histogram of Crimes Data",probability=TRUE)
s = sd(crime$Crime)
m = mean(crime$Crime)
curve(dnorm(x, mean=m, sd=s), add=TRUE,col = "blue", lwd = 3)
grid()
hist(crime$Crime, xlab="Crimes Committed",main="Fig1a: Histogram of Crimes Data",probability=TRUE)
s = sd(crime$Crime)
m = mean(crime$Crime)
curve(dnorm(x, mean=m, sd=s), add=TRUE,lwd = 3)
grid()
hist(crime$Crime, xlab="Crimes Committed",probability=TRUE)
s = sd(crime$Crime)
m = mean(crime$Crime)
curve(dnorm(x, mean=m, sd=s), add=TRUE,lwd = 3)
grid()
